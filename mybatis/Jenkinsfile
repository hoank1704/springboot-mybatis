pipeline {
    agent any

    environment {
        SPRING_DATASOURCE_URL = "jdbc:mysql://mysql:3306/test-mybatis"
        SPRING_DATASOURCE_USERNAME = "root"
        SPRING_DATASOURCE_PASSWORD = "root"
        DOCKER_IMAGE = 'mybatis-mybatis-app'
        DOCKER_REGISTRY = 'docker.io'
        DOCKER_USERNAME = 'hoank17'
        DOCKER_PASSWORD = credentials('docker-hub-token')
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/hoank1704/springboot-mybatis.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Chạy lệnh maven để build ứng dụng
                    sh 'mvn clean install -DskipTests'
                }
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    // Đăng nhập vào Docker registry
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    // Kiểm tra Docker login thành công
                    sh 'docker info'
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    // Build Docker image cho ứng dụng
                    sh 'docker build -t $DOCKER_USERNAME/mybatis-app:latest .'
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    // Đẩy Docker image lên Docker Hub
                    sh 'docker push $DOCKER_USERNAME/mybatis-app:latest'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Dừng và xóa container cũ, mạng cũ
                    sh 'docker-compose down --volumes --remove-orphans'
                    // Khởi động lại dịch vụ với Docker Compose
                    sh 'docker-compose up -d'
                }
            }
        }
    }

    post {
        success {
            echo 'Build and Deploy successful!'
        }
        failure {
            echo 'Build or Deploy failed.'
            // Collect logs for debugging
            sh 'docker logs $(docker ps -q --filter "name=mybatis-mybatis-app")'
        }
    }
}
